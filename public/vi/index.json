[
{
	"uri": "//localhost:1313/vi/2-prerequiste/2.1-awscli/",
	"title": "Cài đặt và cấu hình AWS CLI",
	"tags": [],
	"description": "",
	"content": "1. Cài đặt Chạy đoạn lệnh dưới đây: curl \u0026#34;https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip\u0026#34; -o \u0026#34;awscliv2.zip\u0026#34;\runzip awscliv2.zip\rsudo ./aws/install 2. Cấu hình Chạy lệnh: aws configure Nhập các thông tin sau:\nAWS Access Key ID: Lấy từ AWS IAM Đăng nhập vào AWS Management Console: Truy cập https://aws.amazon.com/console/. Đăng nhập bằng thông tin xác thực tài khoản AWS. Truy cập IAM: Trong AWS Management Console, tìm kiếm IAM. Chọn IAM từ danh sách dịch vụ để mở bảng điều khiển IAM. Chọn một IAM user: Trong menu bảng điều khiển, nhấp vào Users. Nhấp vào IAM user. 4. Tạo Access Key:\nNhấp vào tab Security credentials. Nhấp vào Create access key. Chọn Command Line Interface (CLI). Thêm thẻ mô tả tùy chọn cho khóa (ví dụ: workshop-key). Nhấp vào Create access key. Trên màn hình tiếp theo, bạn sẽ thấy: Access Key ID. Secret Access Key. Tải xuống tệp .csv chứa thông tin xác thực hoặc sao chép chúng vào một nơi an toàn. Secret Access Key chỉ được hiển thị một lần và không thể lấy lại sau đó.\nAWS Secret Access Key: Nhập từ tệp CSV. Default region name: Ví dụ: us-east-1. Default output format: Nhập json hoặc nhấn Enter để sử dụng mặc định. Cấu hình được lưu trong: %USERPROFILE%\\.aws\\credentials và %USERPROFILE%\\.aws\\config\nKiểm tra cấu hình bằng cách chạy:\naws sts get-caller-identity Tài liệu bổ sung Tài liệu AWS IAM: https://docs.aws.amazon.com/iam/ Hướng dẫn cấu hình AWS CLI: https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-quickstart.html "
},
{
	"uri": "//localhost:1313/vi/1-introduce/",
	"title": "Giới thiệu",
	"tags": [],
	"description": "",
	"content": "Giới thiệu Workshop này hướng dẫn người tham gia triển khai quản lý đa cụm Kubernetes bằng Cluster API trên AWS. Cluster API là một dự án Kubernetes cung cấp các API khai báo để quản lý vòng đời cụm, cho phép tự động hóa việc cung cấp, nâng cấp và mở rộng cụm.\nMục tiêu Tự động hóa vòng đời cụm Kubernetes (tạo, mở rộng, nâng cấp và xóa). Thiết lập mạng liên cụm để giao tiếp liền mạch. Phân phối khối lượng công việc giữa các cụm để đảm bảo tính sẵn sàng cao và khả năng mở rộng. Áp dụng các chính sách quản trị và bảo mật để đảm bảo tuân thủ và vận hành an toàn. Áp dụng chiến lược quản lý chi phí để tối ưu hóa việc sử dụng tài nguyên AWS. Xác định quy trình vận hành cho quản lý đa cụm. Workshop sử dụng AWS EKS (Elastic Kubernetes Service) với Cluster API để quản lý nhiều cụm, tập trung vào triển khai thực hành. Sau ưorkshop, người tham gia sẽ có một hệ thống đa cụm hoạt động với quản lý vòng đời tự động, mạng an toàn và vận hành tối ưu chi phí.\n"
},
{
	"uri": "//localhost:1313/vi/2-prerequiste/2.2-tools/2.2.1-kubectl/",
	"title": "Kubectl (CLI cho Kubernet)",
	"tags": [],
	"description": "",
	"content": "Kubernetes cung cấp một công cụ dòng lệnh để giao tiếp với mặt điều khiển của cụm Kubernetes, sử dụng API của Kubernetes. Công cụ này được đặt tên là Kubectl\nCài đặt Chạy đoạn lệnh dưới đây: curl -LO \u0026#34;https://dl.k8s.io/release/v1.33.3/bin/linux/amd64/kubectl\u0026#34;\rchmod +x ./kubectl\rsudo mv ./kubectl /usr/local/bin/kubectl Kiểm tra cài đặt kubectl version --client "
},
{
	"uri": "//localhost:1313/vi/",
	"title": "Kubernetes Multi-Cluster Management với Cluster API",
	"tags": [],
	"description": "",
	"content": "Kubernetes Multi-Cluster Management với Cluster API Tổng quan Workshop này hướng dẫn người tham gia triển khai quản lý đa cụm Kubernetes bằng Cluster API trên AWS. Cluster API là một dự án Kubernetes cung cấp các API khai báo để quản lý vòng đời cụm, cho phép tự động hóa việc cung cấp, nâng cấp và mở rộng cụm.\nMục tiêu Tự động hóa vòng đời cụm Kubernetes (tạo, mở rộng, nâng cấp và xóa). Thiết lập mạng liên cụm để giao tiếp liền mạch. Phân phối khối lượng công việc giữa các cụm để đảm bảo tính sẵn sàng cao và khả năng mở rộng. Áp dụng các chính sách quản trị và bảo mật để đảm bảo tuân thủ và vận hành an toàn. Áp dụng chiến lược quản lý chi phí để tối ưu hóa việc sử dụng tài nguyên AWS. Xác định quy trình vận hành cho quản lý đa cụm. Workshop sử dụng AWS EKS (Elastic Kubernetes Service) với Cluster API để quản lý nhiều cụm, tập trung vào triển khai thực hành. Sau ưorkshop, người tham gia sẽ có một hệ thống đa cụm hoạt động với quản lý vòng đời tự động, mạng an toàn và vận hành tối ưu chi phí.\nNội dung Giới thiệu Các bước chuẩn bị Khởi tạo cluster quản lý Cluster API Tạo Workload Clusters Thiết lập Cross-Cluster Networking Phân phối Workload Triển khai quản trị và bảo mật Quản lý chi phí Quy trình vận hành Dọn dẹp tài nguyên "
},
{
	"uri": "//localhost:1313/vi/2-prerequiste/",
	"title": "Các bước chuẩn bị",
	"tags": [],
	"description": "",
	"content": "\rBạn cần thiết lập các công cụ và môi trường AWS cần thiết để thực hiện bài thực hành này.\nNội dung Cài đặt và cấu hình AWS CLI Cài đặt các công cụ Tạo EC2 Keypair Tạo S3 Bucket "
},
{
	"uri": "//localhost:1313/vi/2-prerequiste/2.2-tools/",
	"title": "Cài đặt công cụ",
	"tags": [],
	"description": "",
	"content": "Nội dung Kubectl (CLI cho Kubernet) Eksctl (CLI cho Amazon EKS) Clusterctl (CLI cho Cluster API) Tài liệu bổ sung kubectl eksctl clusterctl AWS EKS "
},
{
	"uri": "//localhost:1313/vi/2-prerequiste/2.2-tools/2.2.2-eksctl/",
	"title": "Eksctl (CLI cho Amazon EKS)",
	"tags": [],
	"description": "",
	"content": "eksctl là một công cụ dòng lệnh dùng để tạo và quản lý các cụm Kubernetes trên Amazon EKS. Công cụ này đơn giản hóa các tác vụ quản lý cụm bằng cách sử dụng API của AWS.\nCài đặt Chạy đoạn lệnh dưới đây: curl --silent --location \u0026#34;https://github.com/eksctl-io/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz\u0026#34; | tar xz -C /tmp\rsudo mv /tmp/eksctl /usr/local/bin/\rsudo chmod +x /usr/local/bin/eksctl Kiểm tra cài đặt Chạy lệnh sau trong Command Prompt hoặc PowerShell:\neksctl version "
},
{
	"uri": "//localhost:1313/vi/2-prerequiste/2.2-tools/2.2.3-clusterctl/",
	"title": "Clusterctl (CLI cho Cluster API)",
	"tags": [],
	"description": "",
	"content": "clusterctl là một công cụ dòng lệnh dùng để quản lý các cụm Kubernetes thông qua Cluster API. Công cụ này đơn giản hóa việc tạo, nâng cấp và xóa các cụm bằng cách tương tác với các nhà cung cấp Cluster API.\nCài đặt Cài đặt file nhị phân clusterctl bằng curl trên Windows sử dụng PowerShell\nChuyển đến thư mục làm việc nơi bạn muốn tải clusterctl. Tải phiên bản mới nhất; trên Windows, gõ: curl.exe -L https://github.com/kubernetes-sigs/cluster-api/releases/download/v1.10.4/clusterctl-windows-amd64.exe -o clusterctl.exe Thêm vào biến môi trường PATH\nMở Edit the system environment variables trên Windows. Trong System Variables, tìm và chỉnh sửa biến Path. Thêm đường dẫn đến thư mục chứa clusterctl.exe (ví dụ: C:\\Program Files\\clusterctl). Lưu thay đổi. Xác minh cài đặt Kiểm tra để đảm bảo phiên bản bạn đã cài đặt là mới nhất:\nclusterctl version "
},
{
	"uri": "//localhost:1313/vi/3-iniclusters/",
	"title": "Khởi tạo Cluster API quản lý cluster",
	"tags": [],
	"description": "",
	"content": "1. Fork kho lưu trữ Git Fork kho Git https://github.com/aws-samples/eks-ec2-clusterapi-gitops vào tài khoản Github của bạn, sao chép (clone) về máy trạm cục bộ, sau đó chuyển đến thư mục sau:\ncd ./eks-ec2-clusterapi-gitops 2. Khởi tạo cụm quản lý Tạo cụm Kind và xác minh việc tạo thành công:\nkind create cluster\rkubectl cluster-info --context kind-kind Cluster API Provider for AWS bao gồm clusterawsadm, một công cụ để quản lý các đối tượng IAM. Công cụ này sử dụng các biến môi trường, mã hóa chúng vào một Kubernetes Secret trong cụm Kind, và lấy các quyền cần thiết để tạo các cụm workload.\nclusterawsadm bootstrap iam create-cloudformation-stack --region us-east-1 3. Xác định trước các tham số môi trường cần thiết export AWS_B64ENCODED_CREDENTIALS=$(clusterawsadm bootstrap credentials encode-as-profile)\rexport AWS_REGION=us-east-1\rexport EKS=true\rexport EXP_MACHINE_POOL=true\rexport CAPA_EKS_IAM=true 4. Khởi tạo Cluster API với nhà cung cấp AWS Để cài đặt các thành phần Cluster API cho AWS, nhà cung cấp bootstrap kubeadm, và nhà cung cấp control-plane kubeadm, đồng thời biến cụm Kind thành cụm quản lý, sử dụng lệnh clusterctl init:\nclusterctl init --infrastructure aws "
},
{
	"uri": "//localhost:1313/vi/2-prerequiste/2.3-creec2keypair/",
	"title": "Tạo EC2 Keypair",
	"tags": [],
	"description": "",
	"content": " Tạo SSH key pair: Chạy lệnh sau để tạo SSH key pair có tên workshop-key trong vùng us-east-1:\naws ec2 create-key-pair --key-name workshop-key --query \u0026#39;KeyMaterial\u0026#39; --output text \u0026gt; workshop-key.pem Xác minh key pair trong AWS Console:\nĐăng nhập vào AWS Management Console. Điều hướng đến EC2 → Key Pairs. Tìm key pair workshop-key trong vùng us-east-1. "
},
{
	"uri": "//localhost:1313/vi/2-prerequiste/2.2-tools/2.2.4.clusterawsadm/",
	"title": "Clusterawsadm",
	"tags": [],
	"description": "",
	"content": "clusterctl là một công cụ dòng lệnh dùng để quản lý các cụm Kubernetes thông qua Cluster API. Công cụ này đơn giản hóa việc tạo, nâng cấp và xóa các cụm bằng cách tương tác với các nhà cung cấp Cluster API.\nCài đặt Chạy đoạn lệnh dưới đây: curl -LO https://github.com/kubernetes-sigs/cluster-api-provider-aws/releases/download/v2.8.4/clusterawsadm-linux-amd64\rchmod +x clusterawsadm-linux-amd64\rsudo install -o root -g root -m 0755 clusterawsadm-linux-amd64 /usr/local/bin/clusterawsadm Xác minh cài đặt Kiểm tra để đảm bảo phiên bản bạn đã cài đặt là mới nhất:\nclusterctl version "
},
{
	"uri": "//localhost:1313/vi/2-prerequiste/2.4-cres3/",
	"title": "Tạo S3 Bucket",
	"tags": [],
	"description": "",
	"content": "Create an S3 Bucket for Cluster API State:\nTạo một S3 bucket để lưu Cluster API state: aws s3 mb s3://capi-workshop-state --region us-east-1 Kiểm tra: aws s3 ls s3://capi-workshop-state Tên bucket phải là duy nhất. Nếu capi-workshop-state đã tồn tại, hãy thêm tiền tố.\n"
},
{
	"uri": "//localhost:1313/vi/4-creclusters/",
	"title": "Tạo Workload Cluster",
	"tags": [],
	"description": "",
	"content": "Tạo Manifest cho Cụm Kubernetes Tạo khóa SSH: aws ec2 create-key-pair --key-name capi-eks --region ap-southeast-2 --query \u0026#39;KeyMaterial\u0026#39; --output text \u0026gt; capi-eks.pem\raws ec2 create-key-pair --key-name capi-ec2 --region us-east-1 --query \u0026#39;KeyMaterial\u0026#39; --output text \u0026gt; capi-ec2.pem Xác định các biến môi trường: export AWS_CONTROL_PLANE_MACHINE_TYPE=t3.medium\rexport AWS_NODE_MACHINE_TYPE=t3.medium Tạo Manifest cho Cụm Kubernetes trên EC2: export AWS_SSH_KEY_NAME=capi-ec2\rexport AWS_REGION=us-east-1 clusterctl generate cluster capi-ec2 --kubernetes-version v1.31.0 --control-plane-machine-count=3 --worker-machine-count=3 \u0026gt; ./capi-cluster/aws-ec2/aws-ec2.yaml Tạo Manifest cho Cụm Kubernetes trên EKS: export AWS_SSH_KEY_NAME=capi-eks\rexport AWS_REGION=ap-southeast-2\rclusterctl generate cluster capi-eks --flavor eks-managedmachinepool --kubernetes-version v1.31.0 --worker-machine-count=3 \u0026gt; ./capi-cluster/aws-eks/capi-eks.yaml Cài đặt Argo CD trên Cụm Quản lý Kubernetes Cài đặt Argo CD trong cụm quản lý Kind:\nkubectl apply -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml Lấy mật khẩu đăng nhập lần đầu cho giao diện web Argo CD:\nkubectl get secret argocd-initial-admin-secret -o jsonpath=\u0026#34;{.data.password}\u0026#34; | base64 -d; echo Cấu hình xác thực Argo CD với Git:\nĐăng nhập vào cổng web của Argo CD:\nkubectl port-forward svc/argocd-server 8080:80 Tên người dùng: admin Mật khẩu: mật khẩu đăng nhập lần đầu\nĐiều hướng đến Cài đặt \u0026gt; Kho lưu trữ \u0026gt; Kết nối kho lưu trữ:\nChọn phương thức kết nối: HTTP/HTTPS Loại: Git URL kho lưu trữ: URL của kho lưu trữ đã fork Chọn bỏ qua xác minh máy chủ\nKết nối\nTạo Cụm Workload Để ủy quyền cho Argo CD quản lý các đối tượng Cluster API, tạo ClusterRoleBinding để cấp quyền cần thiết cho tài khoản dịch vụ argocd-application-controller, sử dụng vai trò cluster-admin cho đơn giản:\nkubectl apply -f ./management/argo-cluster-role-binding.yaml apiVersion: rbac.authorization.k8s.io/v1 kind: ClusterRoleBinding metadata: name: cluster-admin-argocd-contoller subjects: - kind: ServiceAccount name: argocd-application-controller namespace: default roleRef: apiGroup: rbac.authorization.k8s.io kind: ClusterRole name: cluster-admin Tạo Cụm Workload cho Kubernetes chạy trên EC2: Để tạo cụm EKS mới hoặc cụm Kubernetes chạy trên EC2, trước tiên định nghĩa một ứng dụng theo cách khai báo, đại diện cho tập hợp các manifest Kubernetes để triển khai cụm mới. Trong hướng dẫn này, tất cả cấu hình ứng dụng Argo CD được lưu trong thư mục “Management” của kho lưu trữ đã sao chép. Ví dụ, dưới đây là tệp manifest ứng dụng để tạo cụm Kubernetes chạy trên EC2:\napiVersion: argoproj.io/v1alpha1 kind: Application metadata: name: ec2-cluster spec: destination: name: \u0026#39;\u0026#39; namespace: \u0026#39;default\u0026#39; server: \u0026#39;https://kubernetes.default.svc\u0026#39; source: path: capi-cluster/aws-ec2 repoURL: \u0026#39;[cập nhật URL kho lưu trữ Git tương ứng]\u0026#39; #Chỉ định kho lưu trữ nguồn để lấy cấu hình cụm targetRevision: HEAD project: default #Có thể đặt tên dự án tại đây syncPolicy: automated: prune: true allowEmpty: true Sau khi sửa đổi tệp YAML ứng dụng Argo CD như trên, commit và đẩy các thay đổi lên kho lưu trữ nguồn:\ngit push .\rgit add .\rgit commit -m “cập nhật tệp manifest ứng dụng Argo CD” Chạy lệnh sau để tạo một ứng dụng mới nhằm tạo cụm Kubernetes chạy trên EC2:\nkubectl apply -f ./management/argocd-ec2-app.yaml Sử dụng ứng dụng Argo CD để cung cấp cụm EKS. Đầu tiên, tạo một ứng dụng và cập nhật tệp YAML liên quan để đặt repoURL thành kho lưu trữ Git của bạn. Sau đó, commit và đẩy các thay đổi lên kho lưu trữ nguồn.\nkubectl apply -f ./management/argocd-eks-app.yaml Kiểm tra trạng thái của các cụm:\nclusterctl describe cluster capi-eks\rclusterctl describe cluster capi-ec2 Cụm EC2 hiển thị trạng thái READY của các node công việc là \u0026ldquo;False\u0026rdquo; do không có CNI, khiến các node không tham gia vào cụm. Để minh họa, triển khai Calico CNI vào cụm EC2, có thể tự động hóa bằng Argo CD.\nLấy tệp kubeconfig cho cụm mới tạo trên EC2:\nclusterctl get kubeconfig capi-ec2 \u0026gt; capikubeconfig-ec2 Triển khai Calico CNI:\nkubectl --kubeconfig=./capikubeconfig-ec2 apply -f https://docs.projectcalico.org/v3.21/manifests/calico.yaml Calico CNI được triển khai thành công, kiểm tra lại trạng thái cụm.\nKhi tạo cụm EKS, hệ thống tự động tạo và lưu trữ các tệp kubeconfig dưới dạng bí mật (secret) trong cụm quản lý. Hành vi này khác với việc tạo cụm không được quản lý bằng nhà cung cấp AWS, nơi kubeconfig không được lưu trữ theo cách này. Bí mật chứa kubeconfig sẽ được đặt tên là [tên-cụm]-user-kubeconfig, trong đó thay [tên-cụm] bằng tên thực tế của cụm.\nĐể lấy kubeconfig người dùng cho cụm có tên ‘capi-eks’, chạy lệnh sau:\nkubectl --namespace=default get secret capi-eks-user-kubeconfig -o jsonpath={.data.value} | base64 --decode \u0026gt; capikubeconfig-eks "
},
{
	"uri": "//localhost:1313/vi/2-prerequiste/2.2-tools/2.2.5-kind/",
	"title": "Kind",
	"tags": [],
	"description": "",
	"content": "Cài đặt Chạy đoạn lệnh dưới đây: curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.24.0/kind-linux-amd64\rchmod +x ./kind\rsudo install -o root -g root -m 0755 ./kind /usr/local/bin/kind Xác minh cài đặt Kiểm tra để đảm bảo phiên bản bạn đã cài đặt là mới nhất:\nclusterctl version "
},
{
	"uri": "//localhost:1313/vi/5-networking/",
	"title": "Thiết lập Cross-Cluster Networking",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/vi/2-prerequiste/2.2-tools/docker/",
	"title": "Docker",
	"tags": [],
	"description": "",
	"content": "Kubernetes cung cấp một công cụ dòng lệnh để giao tiếp với mặt điều khiển của cụm Kubernetes, sử dụng API của Kubernetes. Công cụ này được đặt tên là Kubectl\nCài đặt Tải Download Binary Di chuyển đến một thư mục: Di chuyển kubectl.exe đến một thư mục như C:\\Program Files\\kubectl hoặc một thư mục khác Thêm đường dẫn thư mục vào system environment variable sử dụng kubectl từ bất cứ đâu Kiểm tra cài đặt kubectl version --client "
},
{
	"uri": "//localhost:1313/vi/6-distribution/",
	"title": "Phân phối Workload",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/vi/7-security/",
	"title": "Triển khai quản trị và bảo mật",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/vi/8-cost/",
	"title": "Quản lý chi phí",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/vi/9-procedures/",
	"title": "Quy trình vận hành",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/vi/10-cleanup/",
	"title": "Dọn dẹp tài nguyên  ",
	"tags": [],
	"description": "",
	"content": "Dọn Dẹp Tài Nguyên Sau Workshop Để đảm bảo không phát sinh chi phí đám mây ngoài ý muốn, hãy thực hiện các bước sau để xóa toàn bộ môi trường đã tạo:\nXóa các ứng dụng Argo CD: kubectl delete -f ./management/argocd-ec2-app.yaml kubectl delete -f ./management/argocd-eks-app.yaml\rkubectl delete -f ./app/eks-app/eks-nginx-deploy.yaml Xóa các cụm đã tạo: kubectl delete cluster capi-eks\rkubectl delete cluster capi-ec2 Xóa SSH key EC2 đã tạo ở mỗi vùng: aws ec2 delete-key-pair --key-name capi-eks --region ap-southeast-2\raws ec2 delete-key-pair --key-name capi-ec2 --region us-east-1 Xóa CloudFormation Stack được tạo khi chạy lệnh “clusterawsadm bootstrap”: aws cloudformation delete-stack --stack-name cluster-api-provider-aws-sigs-k8s-io --region us-east-1 Xóa cụm quản lý (Kind cluster): kind delete cluster "
},
{
	"uri": "//localhost:1313/vi/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/vi/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]